{"version":3,"file":"index.js","mappings":"0BAEiB,ICAF,MACbA,WAAAA,GACEC,KAAKC,UAAYC,SAASC,cAAc,cACxCH,KAAKI,SAAWJ,KAAKC,UAAUE,cAAc,cAC7CH,KAAKK,MAAQL,KAAKC,UAAUE,cAAc,UAC1CH,KAAKM,KAAO,KACZN,KAAKO,IAAM,mCACb,CAEAC,IAAAA,GACER,KAAKS,mBACLT,KAAKU,UACLV,KAAKW,eACP,CAEA,aAAMD,GACJ,IACEV,KAAKM,UCnBWM,WACpB,MAAMC,QAAiBC,MAAMP,GAG7B,aAFmBM,EAASE,OAAOC,OAAM,IAAM,MAEpC,EDeWC,CAAcjB,KAAKO,KACrCP,KAAKI,SAASc,kBACd,MAAMC,EAAOC,KAAKC,MAAMrB,KAAKM,KAAKa,MAClCG,QAAQC,IAAIJ,GACZA,EAAKK,SAASC,IACZzB,KAAK0B,WAAWD,EAAG,GAEvB,CAAE,MAAOE,GACH3B,KAAKK,MAAMuB,UAAUC,SAAS,SAChC7B,KAAKK,MAAMuB,UAAUE,OAAO,OAEhC,CACF,CAEAJ,UAAAA,CAAWD,GACT,MAAMM,EAAW,kDAC0BN,EAAGO,kDACPP,EAAGQ,kJAGZR,EAAGS,8IAGST,EAAGU,0GAK7CnC,KAAKI,SAASgC,mBAAmB,aAAcL,EACjD,CAEApB,aAAAA,GAgBE,IAAK,IAAI0B,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BrC,KAAKI,SAASgC,mBAAmB,aAhBlB,+aAkBnB,CAEA3B,gBAAAA,GACOT,KAAKK,MAAMuB,UAAUC,SAAS,SACjC7B,KAAKK,MAAMuB,UAAUU,IAAI,QAGvB,kBAAmBC,WACrBA,UAAUC,cAAcC,SAAS,oBAAqB,CAAEC,MAAO,OAC5DC,MAAMC,IACLtB,QAAQC,IAAK,mCAAkCqB,EAAIF,QAAQ,IAC1D1B,OAAOX,IACRiB,QAAQC,IAAK,4BAA2BlB,IAAQ,GAGxD,IDjFOG,M","sources":["webpack:///./js/app.js","webpack:///./js/NewsList.js","webpack:///./js/createRequest.js"],"sourcesContent":["import NewsList from './NewsList';\n\nconst newsList = new NewsList();\nnewsList.init();\n","import createRequest from './createRequest';\n\nexport default class NewsList {\n  constructor() {\n    this.container = document.querySelector('.container');\n    this.newsList = this.container.querySelector('.news_list');\n    this.error = this.container.querySelector('.error');\n    this.data = null;\n    this.url = 'https://sw-0bdq.onrender.com/news';\n  }\n\n  init() {\n    this.addServiceWorker();\n    this.getData();\n    this.createLoading();\n  }\n\n  async getData() {\n    try {\n      this.data = await createRequest(this.url);\n      this.newsList.replaceChildren();\n      const news = JSON.parse(this.data.news);\n      console.log(news);\n      news.forEach((el) => {\n        this.createNews(el);\n      });\n    } catch (err) {\n      if (this.error.classList.contains('hide')) {\n        this.error.classList.remove('hide');\n      }\n    }\n  }\n\n  createNews(el) {\n    const boxText = `\n                  <div class=\"news data-id =\"${el.id}\">\n                  <div class=\"news_date\">${el.received}</div>\n                  <div class=\"news_content \">\n                    <div class=\"news_img_box\">\n                      <img src=\"${el.image}\" alt=\"image\">\n                    </div>\n                    <div class=\"news_text \">\n                    <p class=\"loader_title\">${el.description}</p>\n                    </div>\n                  </div>\n                </div>\n        `;\n    this.newsList.insertAdjacentHTML('afterbegin', boxText);\n  }\n\n  createLoading() {\n    const boxText = `\n        <div class=\"news\">\n        <div class=\"news_date loading \"></div>\n        <div class=\"news_content \">\n          <div class=\"news_img_box loading\">\n            <img>\n          </div>\n          <div class=\"news_text \">\n          <p class=\"loader_title loading\"></p>\n          <p class=\"loader_title loading\"></p>\n          <p class=\"loader_title loading\"></p>\n          </div>\n        </div>\n      </div>\n  `;\n    for (let i = 0; i < 3; i += 1) {\n      this.newsList.insertAdjacentHTML('afterbegin', boxText);\n    }\n  }\n\n  addServiceWorker() {\n    if (!this.error.classList.contains('hide')) {\n      this.error.classList.add('hide');\n    }\n\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('service-worker.js', { scope: './' })\n        .then((reg) => {\n          console.log(`registration succeded/ Scope is ${reg.scope}`);\n        }).catch((error) => {\n          console.log(`registration failed with ${error}`);\n        });\n    }\n  }\n}\n","const createRequest = async (url) => {\n  const response = await fetch(url);\n  const json = await response.json().catch(() => null);\n\n  return json;\n};\n\nexport default createRequest;\n"],"names":["constructor","this","container","document","querySelector","newsList","error","data","url","init","addServiceWorker","getData","createLoading","async","response","fetch","json","catch","createRequest","replaceChildren","news","JSON","parse","console","log","forEach","el","createNews","err","classList","contains","remove","boxText","id","received","image","description","insertAdjacentHTML","i","add","navigator","serviceWorker","register","scope","then","reg"],"sourceRoot":""}